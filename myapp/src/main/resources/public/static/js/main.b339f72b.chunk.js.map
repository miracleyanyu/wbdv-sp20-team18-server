{"version":3,"sources":["assets/logo.png","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/zomato-cities.js","components/dashboard/DashboardComponent.js","components/zomato-city-restaurants.js","components/zomato-restaurant-detail.js","components/user/SignIn.js","components/user/SignUp.js","components/user/Profile.js","containers/SignInContainer.js","containers/SignUpContainer.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/restaurantReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","SignedInLinks","className","to","SignedOutLinks","NavBarComponent","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ZomatoCities","state","cities","title","searchCity","fetch","then","response","json","results","setState","location_suggestions","value","this","onChange","e","target","onClick","map","city","key","name","React","Component","DashboardComponent","connect","restaurants","restaurant","ZomatoRestaurants","props","cityID","prevProps","prevState","snapshot","ZomatoRestaurantDetail","location","restaurantID","console","log","menu_url","cuisines","timings","address","featured_image","SignIn","username","password","user","submitLogin","data","document","getElementById","$","ajax","url","success","findUser","error","err","handleChange","htmlFor","placeholder","role","href","users","SignUp","email","firstName","lastName","verifyPassword","submitChanges","Profile","userName","phone","SignInContainer","dispatch","SignUpContainer","App","path","exact","component","render","match","params","Boolean","window","hostname","userReducer","action","initState","is","restaurantReducer","rootReducer","combineReducers","store","createStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b339f72b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.882745ac.png\";","import React from 'react';\nimport { NavLink} from \"react-router-dom\";\n\n\nconst SignedInLinks = () => {\n  return (\n      <ul className=\"navbar-nav right\">\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/cities'>Restaurants</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/profile'>Profile</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/order'>Order</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/'>Log Out</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/' className='btn btn-floating pink lighten-1'>UserName</NavLink></li>\n      </ul>\n  )\n}\n\nexport default SignedInLinks;\n","import React from 'react';\nimport { NavLink} from \"react-router-dom\";\n\n\nconst SignedOutLinks = () => {\n  return (\n      <ul className=\"navbar-nav right\">\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/cities'>Restaurants</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/profile'>Profile</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/login'>Sign In</NavLink></li>\n        <li className=\"nav-item nav-link mr-2\"><NavLink to='/signup'>Sign Up</NavLink></li>\n      </ul>\n  )\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport '../../styles/navbar.css';\nimport logo from '../../assets/logo.png';\nimport {Link, NavLink} from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from './SignedOutLinks';\n\n\nconst NavBarComponent = () =>\n\n    <nav className=\"navbar navbar-expand-lg navbar-dark nav-wrapper black daken-3\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <span className=\"wbdv-label mr-sm-3 d-none d-sm-block\">\n           <img src={logo} className=\"logo mr-2\" alt=\"logo\"/>\n           Online Food Ordering\n         </span>\n        </Link>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                data-target=\"#navbarTogglerDemo02\"\n                aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n          <SignedOutLinks/>\n          <SignedInLinks/>\n        </div>\n\n    </nav>\n\n\nexport default NavBarComponent;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class ZomatoCities extends React.Component {\n    state = {\n        cities: [],\n        title: ''\n    }\n    componentDidMount() {\n        fetch(\"https://developers.zomato.com/api/v2.1/cities?q=NewYork&apikey=8410dcfb67f3253d684c344327ccef10\")\n            .then(response => response.json())\n            .then(results => this.setState({\n                    cities: results.location_suggestions\n                })\n            )\n            }\n    searchCity = (title) =>\n        fetch(`https://developers.zomato.com/api/v2.1/cities?q=${title}&apikey=8410dcfb67f3253d684c344327ccef10`)\n            .then(response => response.json())\n            .then(results => this.setState({\n                cities: results.location_suggestions\n            }))\n\n    render() {\n        return(\n            <div className=\"container\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <input\n                            value={this.state.title}\n                            onChange={(e) => this.setState({\n                                title: e.target.value\n                            })}\n                            className=\"form-control\"/>\n                        <button\n                            onClick={() => this.searchCity(this.state.title)}\n                            className=\"btn btn-primary btn-block\">\n                            Search\n                        </button>\n                    </li>\n\n                    {\n                        this.state.cities.map(city =>\n                            <li className=\"list-group-item\"\n                            key = {city.id}>\n                                <Link to={`/cities/${city.id}`}>\n                                    {city.name}\n                                </Link>\n                            </li>\n                        )\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport ZomatoCities from \"../zomato-cities\";\nimport {connect} from 'react-redux';\n\nclass DashboardComponent extends Component {\n  render() {\n    return (\n        <div className='dashboard container mt-5'>\n          <div className=\"row\">\n            <ZomatoCities/>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    restaurants: state.restaurant.restaurants\n  }\n}\nexport default connect(mapStateToProps)(DashboardComponent);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class ZomatoRestaurants extends React.Component {\n    state = {\n        restaurants:[]\n    }\n    componentDidMount() {\n        fetch(`https://developers.zomato.com/api/v2.1/search?entity_id=${this.props.cityID}&entity_type=city&apikey=8410dcfb67f3253d684c344327ccef10`)\n            .then(response => response.json())\n            .then(results => this.setState({\n                restaurants: results.restaurants\n            }))\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.cityID !== prevProps.cityID) {\n            fetch(`https://developers.zomato.com/api/v2.1/search?entity_id=${this.props.cityID}&entity_type=city&apikey=8410dcfb67f3253d684c344327ccef10`)\n                .then(response => response.json())\n                .then(results => this.setState({\n                    restaurants: results.restaurants\n                }))\n        }\n    }\n    render() {\n        return(\n            <div className=\"container\">\n                <ul className=\"z-depth-0 list-group\">\n                    {\n                        this.state.restaurants.map(restaurant =>\n                            <li className=\"card-content list-group-item\"\n                                key = {restaurant.restaurant.id}>\n                                <Link className=\"card-title grey-text text-darken-3\" to={`/cities/restaurant/${restaurant.restaurant.id}`}>\n                                    {restaurant.restaurant.name}\n                                </Link>\n\n                            </li>\n                        )\n                    }\n                </ul>\n            </div>\n        )\n    }\n\n}\n","import React from \"react\";\nimport '../styles/styles.css'\n\nexport default class ZomatoRestaurantDetail extends React.Component {\n    state = {\n        restaurant: {},\n        location:[]\n    }\n    componentDidMount() {\n        fetch(`https://developers.zomato.com/api/v2.1/restaurant?res_id=${this.props.restaurantID}&apikey=8410dcfb67f3253d684c344327ccef10`)\n            .then(response => response.json())\n            .then(results => this.setState({\n                restaurant: results,\n                location:results.location\n            }))\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.restaurantID !== prevProps.restaurantID) {\n            fetch(`https://developers.zomato.com/api/v2.1/restaurant?res_id=${this.props.restaurantID}&apikey=8410dcfb67f3253d684c344327ccef10`)\n                .then(response => response.json())\n                .then(results => this.setState({\n                    restaurant: results,\n                    location:results.location\n                }))\n        }\n    }\n    render() {\n        console.log(\"this.state.restaurant.menu_url\", this.state.restaurant.menu_url);\n        return(\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        {/*<h1>Details for {this.state.restaurant.location}</h1>*/}\n                        <span className=\"card-title black\">Restaurant: {this.state.restaurant.name}</span>\n\n                        <div className=\"card-action grey lighten-2 grey-text\">\n                            <p>Cuisines: {this.state.restaurant.cuisines}</p>\n                            <p>Timings: {this.state.restaurant.timings}</p>\n                            <p>Location: {this.state.location.address}</p>\n\n\n                            {/*<p>location: {this.state.restaurant.location.cuisines}</p>*/}\n                            {/*<p>Actors: {this.state.restaurant.Actors}</p>*/}\n                        </div>\n\n                        <img className=\"featured-image\" src={this.state.restaurant.featured_image}/>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from '../../assets/logo.png';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport $ from 'jquery'\n\nclass SignIn extends React.Component {\n\n  constructor(props) {\n    super(props)\n  };\n\n  state = {\n    username: '',\n    password: ''\n  }\n\n  user = [];\n\n  submitLogin = (e) => {\n    const username = document.getElementById('username').value\n    const password = document.getElementById('password').value\n    const data = {\n        username: username,\n        password: password\n    };\n    $.ajax({\n        url: '/login.json',\n        data: data,\n        type: 'POST',\n        success: (user) => {\n            // this.props.history.push(`/profile`);\n            console.log(user);\n            this.props.findUser(user);\n        },\n        error: (err) => {\n            console.log(err)\n        }\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  };\n\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"col-md-8 offset-md-2 mt-5\">\n            <div className=\"text-center mb-3\">\n              <img src={logo} className=\"form-logo\"/>\n            </div>\n\n            <h1 className='text-center'>Sign In</h1>\n\n            <div className=\"content-wrapper\">\n              <div className=\"form-group row wbdv-field wbdv-username\">\n                <label htmlFor=\"username\"\n                       className=\"col-sm-2 col-form-label\">\n                  Username\n                </label>\n                <div className=\"col-sm-10\">\n                  <input className=\"form-control\"\n                         id=\"username\"\n                         placeholder=\"Alice\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n              <div className=\"form-group row wbdv-field wbdv-password\">\n                <label htmlFor=\"password\"\n                       className=\"col-sm-2 col-form-label\">\n                  Password\n                </label>\n                <div className=\"col-sm-10\">\n                  <input type=\"password\"\n                         className=\"form-control\"\n                         id=\"password\"\n                         placeholder=\"123qwe#$%\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"></label>\n                <div className=\"col-sm-10\">\n\n                  <div className=\"row mb-3\">\n                    <div className=\"col-sm-9\">\n                      <a className=\"btn btn-primary btn-block wbdv-button wbdv-login mb-3\"\n                         onClick={this.submitLogin}\n                         role=\"button\">\n                          Sign in\n                      </a>\n                    </div>\n\n                    <div className=\"col-sm-3\">\n                      <Link to=\"/\"\n                            className=\"btn btn-danger btn-block\"\n                            role=\"button\">\n                        Cancel\n                      </Link>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-6 wbdv-link wbdv-forgot-password\">\n                      <a href=\"#\" role=\"button\">Forgot Password?</a>\n                    </div>\n\n                    <div className=\"col-6 wbdv-link wbdv-register\">\n                      <Link className=\"float-right\"\n                            to=\"/signup\"\n                            role=\"button\">\n                        Sign up\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n      users: state.user.users\n  }\n}\n\nexport default connect(mapStateToProps)(SignIn);\n","import React from 'react';\nimport logo from \"../../assets/logo.png\";\nimport {Link} from 'react-router-dom';\nimport $ from \"jquery\";\nimport {connect} from \"react-redux\";\n\nclass SignUp extends React.Component {\n\n  constructor(props) {\n    super(props)\n  };\n\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    verifyPassword: ''\n  }\n\n  user = [];\n\n  submitChanges = (e) => {\n    const username = document.getElementById('username').value\n    const password = document.getElementById('password').value\n    const firstName = document.getElementById('firstName').value\n    const lastName = document.getElementById('lastName').value\n    const email = document.getElementById('email').value\n    const data = {\n      username: username,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      email: email\n    };\n    console.log(data)\n    $.ajax({\n      url: '/signup.json',\n      data: data,\n      type: 'POST',\n      success: (user) => {\n        console.log(user);\n        this.props.findUser(user);\n      },\n      error: (err) => {\n        console.log(err)\n      }\n    });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  };\n\n  render() {\n    return (\n        <div className=\"container login-wrapper\">\n          <div className=\"col-md-8 offset-md-2 mt-5\">\n            <div className=\"text-center mb-3\">\n              <img src={logo} className=\"form-logo\"/>\n            </div>\n            <h1 className=\"text-center\">Sign Up</h1>\n\n            <div className=\"content-wrapper\">\n              <div className=\"form-group row wbdv-field wbdv-username\">\n                <label htmlFor=\"username\"\n                       className=\"col-sm-3 col-form-label\">\n                  Username\n                </label>\n                <div className=\"col-sm-9\">\n                  <input className=\"form-control\"\n                         id=\"username\"\n                         placeholder=\"Alice\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n              <div className=\"form-group row wbdv-field wbdv-password\">\n                <label htmlFor=\"password\"\n                       className=\"col-sm-3 col-form-label\">\n                  Password\n                </label>\n                <div className=\"col-sm-9\">\n                  <input type=\"password\"\n                         className=\"form-control\"\n                         id=\"password\"\n                         placeholder=\"123qwe#$%\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n\n              <div className=\"form-group row wbdv-field wbdv-password-verify\">\n                <label htmlFor=\"verifyPassword\"\n                       className=\"col-sm-3 col-form-label\">\n                  Verify Password\n                </label>\n                <div className=\"col-sm-9\">\n                  <input type=\"password\"\n                         className=\"form-control\"\n                         id=\"verifyPassword\"\n                         placeholder=\"123qwe#$%\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n\n              <div className=\"form-group row wbdv-field\">\n                <label htmlFor=\"firstName\"\n                       className=\"col-sm-3 col-form-label\">\n                  First Name\n                </label>\n                <div className=\"col-sm-9\">\n                  <input type=\"text\"\n                         className=\"form-control\"\n                         id=\"firstName\"\n                         placeholder=\"Alice\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n\n              <div className=\"form-group row wbdv-field\">\n                <label htmlFor=\"lastName\"\n                       className=\"col-sm-3 col-form-label\">\n                  Last Name\n                </label>\n                <div className=\"col-sm-9\">\n                  <input type=\"text\"\n                         className=\"form-control\"\n                         id=\"lastName\"\n                         placeholder=\"Wonderland\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n\n              <div className=\"form-group row wbdv-field \">\n                <label htmlFor=\"email\"\n                       className=\"col-sm-3 col-form-label\">\n                  Email\n                </label>\n                <div className=\"col-sm-9\">\n                  <input type=\"email\"\n                         className=\"form-control\"\n                         id=\"email\"\n                         placeholder=\"alice@wonderland.com\"\n                         onChange={this.handleChange}/>\n                </div>\n              </div>\n\n              <div className=\"form-group row\">\n                <label className=\"col-sm-3 col-form-label\"></label>\n                <div className=\"col-sm-9\">\n\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      <a className=\"btn btn-primary btn-block wbdv-button wbdv-register mb-3\"\n                         onClick={this.submitChanges}\n                         role=\"button\">\n                        Sign up\n                      </a>\n                    </div>\n\n                    <div className=\"col-sm-3\">\n                      <Link to=\"/\"\n                            className=\"btn btn-danger btn-block\"\n                            role=\"button\">\n                        Cancel\n                      </Link>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-6\">\n                      <Link className=\"float-left wbdv-link wbdv-login\"\n                            to=\"/login\"\n                            role=\"button\">\n                        Login\n                      </Link>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    users: state.user.users\n  }\n}\n\nexport default connect(mapStateToProps)(SignUp);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport logo from \"../../assets/logo.png\";\nimport {Link} from 'react-router-dom';\n\n\nclass Profile extends React.Component {\n    state = {\n        user : {}}\n    render() {\n        return(\n            <div>\n                {\n                this.props.users.map(user =>\n                    <div className=\"container\">\n                        <div className=\"col-md-8 offset-md-2 mt-5\">\n                            <div className=\"text-center mb-3\">\n                                <img src={logo} className=\"form-logo\"/>\n                            </div>\n                            <h1 className=\"text-center\">Profile</h1>\n                            <div className=\"content-wrapper\">\n                                <div className=\"form-group row wbdv-field wbdv-username\">\n                                    <label htmlFor=\"username\"\n                                           className=\"col-sm-3 col-form-label\">\n                                        Username\n                                    </label>\n                                    <div className=\"col-sm-9\">\n                                        {user.userName}\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row wbdv-field wbdv-phone\">\n                                    <label htmlFor=\"phone\"\n                                           className=\"col-sm-3 col-form-label\">\n                                        PhoneNumber\n                                    </label>\n                                    <div className=\"col-sm-9\">\n                                        {user.phone}\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row wbdv-field wbdv-email\">\n                                    <label htmlFor=\"email\"\n                                           className=\"col-sm-3 col-form-label\">\n                                        Email\n                                    </label>\n                                    <div className=\"col-sm-9\">\n                                        {user.email}\n                                    </div>\n                                </div>\n                                <div className=\"form-group row wbdv-field wbdv-address\">\n                                    <label htmlFor=\"address\"\n                                           className=\"col-sm-3 col-form-label\">\n                                        Address\n                                    </label>\n                                    <div className=\"col-sm-9\">\n                                        {user.address}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>)\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        users: state.user.users\n    }\n}\nexport default connect(mapStateToProps)(Profile);\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SignIn from \"../components/user/SignIn\";\n\nconst stateToPropertyMapper = (state) => ({\n  users: state.user.users\n});\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  findUser: (user) => {\n    dispatch({\n      type: \"findUser\",\n      users: user\n    })\n  }\n})\n\nconst SignInContainer = connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(SignIn);\n\nexport default SignInContainer;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SignUp from \"../components/user/SignUp\";\n\nconst stateToPropertyMapper = (state) => ({\n  users: state.user.users\n});\n\nconst dispatchToPropertyMapper = (dispatch) => ({\n  findUser: (user) => {\n    dispatch({\n      type: \"findUser\",\n      users: user\n    })\n  }\n})\n\nconst SignUpContainer = connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(SignUp);\n\nexport default SignUpContainer;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport NavBarComponent from \"./components/layout/Navbar\";\nimport DashboardComponent from './components/dashboard/DashboardComponent'\nimport ZomatoCities from \"./components/zomato-cities\";\nimport ZomatoRestaurants from \"./components/zomato-city-restaurants\";\nimport ZomatoRestaurantDetail from \"./components/zomato-restaurant-detail\";\nimport SignIn from \"./components/user/SignIn\";\nimport SignUp from \"./components/user/SignUp\";\nimport Profile from \"./components/user/Profile\";\nimport SignInContainer from \"./containers/SignInContainer\";\nimport SignUpContainer from \"./containers/SignUpContainer\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n          <NavBarComponent/>\n          <Switch>\n            <Route path='/' exact component={DashboardComponent}></Route>\n            <Route path=\"/cities\" exact component={ZomatoCities}/>\n            <Route path=\"/cities/:cityID\" exact\n                render={(props) =>\n                    <ZomatoRestaurants\n                        cityID={props.match.params.cityID}/>}/>\n            <Route path=\"/cities/restaurant/:restaurantID\" exact\n                render={(props) =>\n                    <ZomatoRestaurantDetail\n                        restaurantID={props.match.params.restaurantID}/>}/>\n            <Route path=\"/login\" exact component={SignInContainer}/>\n            <Route path=\"/signup\" exact component={SignUpContainer}/>\n            <Route path=\"/profile\"\n                   exact component={Profile}/>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  users : [{id: '1', userName: 'Bob', Phone:'8578927364', Email:'alice2020@gmail.com',\n    Address: 'Seattle, WA', userLevel:'SILVER'}\n  ]\n};\n\nconst userReducer = (state = initState, action) => {\n  return {\n  \tusers: [\n  \t\taction.users\n  \t]\n  }\n}\n\nexport default userReducer;\n","const initState = {\n  restaurants: [\n    {is: '1', title: 'test', }\n  ]\n};\n\nconst restaurantReducer = (state = initState, action) => {\n  return state;\n}\n\nexport default restaurantReducer;\n","import userReducer from \"./userReducer\";\nimport restaurantReducer from \"./restaurantReducer\";\nimport {combineReducers} from \"redux\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  restaurant: restaurantReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport rootReducer from \"./reducers/rootReducer\";\nimport {Provider} from 'react-redux';\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}